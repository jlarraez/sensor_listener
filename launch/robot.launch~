<launch>
  <!--Planning parameter-->
  <arg name="planning_plugin" value="ompl_interface/OMPLPlanner" />
  <arg name="planning_adapters" value="default_planner_request_adapters/AddTimeParameterization default_planner_request_adapters/FixWorkspaceBounds default_planner_request_adapters/FixStartStateBounds default_planner_request_adapters/FixStartStateCollision default_planner_request_adapters/FixStartStatePathConstraints" />
  
  <!-- send urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find schunk_lwa4p)/urdf/robot.urdf.xacro'" />

  <!-- robot state publisher -->
  <node ns="arm" pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" type="string" value="" />
      <!--remap from="joint_states" to="/arm/joint_states"/-->
  </node>

  <!--node ns="lwa4p" name="driver" pkg="canopen_motor_node" type="canopen_motor_node" output="screen" clear_params="true" launch-prefix="gdb -ex run -/-args"-->
  <node ns="arm" name="driver" pkg="canopen_motor_node" type="canopen_motor_node" output="screen" clear_params="true" launch-prefix="">
     <rosparam command="load" file="$(find schunk_lwa4p)/config/can0.yaml" />
     <rosparam command="load" file="$(find schunk_lwa4p)/config/arm_driver.yaml" />
     <!--remap from="joint_states" to="/joint_states"/-->
  </node>

  <!-- controllers -->
  <rosparam ns="arm" command="load" file="$(find schunk_lwa4p)/config/arm_controller.yaml" />
  <rosparam ns="arm" command="load" file="$(find schunk_lwa4p)/config/joint_limits.yaml"/>
  <rosparam ns="arm" command="load" file="$(find schunk_lwa4p)/config/arm_cartesian_controller.yaml"/>

  <!-- start_controllers -->
  <node ns="arm" name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false" output="screen"/>

  <!-- control_mode_adapter -->
  <node ns="arm" name="cob_control_mode_adapter_node" pkg="cob_control_mode_adapter" type="cob_control_mode_adapter_node" cwd="node" respawn="false" output="screen"/>
  <node ns="arm" name="joint_states_relay" pkg="topic_tools" type="relay" args="joint_states /joint_states" cwd="node" respawn="true" output="screen"/>
  
  
  <!-- ToDo: Cartesian controller -->
  
  <!-- default robot config -->
  <rosparam ns="/script_server/arm" command="load" file="$(find schunk_lwa4p)/config/joint_configurations.yaml" />



	<!-- Start the Powerball API Node -->
	<node pkg="schunk_api" type="schunk_api_node.py" name="schunk_api_node" output="screen"/>	
  <include file="$(find schunk_gripper_moveit_config)/launch/demo.launch"/>

  <node name="listener" pkg="sensor_listener" type="listener" respawn="false" output="screen" args="600">
  <param name="planning_plugin" value="$(arg planning_plugin)" />
    <param name="request_adapters" value="$(arg planning_adapters)" />
    <param name="start_state_max_bounds_error" value="0.1" />

  </node>


<!--



<include file="$(find pr2_moveit_config)/launch/demo.launch"/>
<node name="move_group_interface_tutorial" pkg="pr2_moveit_tutorials" type="move_group_interface_tutorial" respawn="false" output="screen">
</node>

-->

</launch>
